{"version":3,"sources":["../node_modules/sourcegraph/lib/extension/index.js","extension.ts"],"names":[],"mappings":";;AAQA,IAAA,EAAA,UAAA,GADA,OAAA,QAAA,EAAA,QAAA;;ACLA,aAAA,IAAA,EAAA,MAAA,KAAA,cAAA,SAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,OAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,QAAA,YAAA,EAFA,IAAA,EAAA,EAAA,QAAA,gBAEA,SAAgB,IACd,EAAY,UAAU,sBAAsB,CAAC,KAAM,CACjD,aAAc,WAAO,MAAA,CAAE,SAAU,CAAE,MAAO,YAF9C,QAAA,SAAA","file":"extension.map","sourceRoot":"../src","sourcesContent":["// This is the module that is bundled with extensions when they use `import ... from 'sourcegraph'` or\n// `require('sourcegraph')`. It delegates to the extension host's runtime implementation of this module by calling\n// `global.require` (which ensures that the extension host's `require` is called at runtime).\n//\n// This dummy file is used when the extension is bundled with a JavaScript bundler that lacks support for externals\n// (or when `sourcegraph` is not configured as an external module). Parcel does not support externals\n// (https://github.com/parcel-bundler/parcel/issues/144). Webpack, Rollup, and Microbundle support externals.\nmodule.exports = global.require('sourcegraph')\n","import * as sourcegraph from \"sourcegraph\";\n\nexport function activate(): void {\n  sourcegraph.languages.registerHoverProvider([\"*\"], {\n    provideHover: () => ({ contents: { value: \"Meow\" } })\n  });\n}\n"]}